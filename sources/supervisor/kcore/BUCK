cxx_library(
  name = "kcore",
  #soname = "kmodule:io.github.twrl.conurbation.kernel.core",
  srcs = glob(['src/**/*.cc']),
  header_namespace = "",
  exported_headers = subdir_glob([('inc', "**/*.hh"), ('inc', "**/*.h")], prefix = "conurbation/"),
  visibility = [ "//sources/supervisor/..."],
  preferred_linkage = "static",
  link_style = "static",
  compiler_flags = [ "-fPIC", "-nostdinc++", "-nobuiltininc", "-fno-exceptions", "-fno-rtti", "-ffreestanding" ],
#   linker_flags = [
#     "-nostdlib",
#     "-Wl,-Bsymbolic",
#     "-Wl,--discard-all",
#     "-Wl,--build-id",
#     "-Wl,-m,elf_x86_64",
#     "-Wl,--whole-archive",
#     "-Wl,-z,nodefaultlib",
#     "-Wl,--hash-style,sysv",
#     "-Wl,--export-dynamic"
# ],
  # linker_flags = [ "-nostdlib" ]
)

genrule(
    name = "start_asm",
    out = "start.a",
    srcs = [
        "src/start.asm"
    ],
    cmd = "nasm -f elf64 -o $OUT.o $SRCS && ar cr $OUT $OUT.o",
    visibility = [ "//sources/supervisor/..." ]
)

genrule(
    name = "mem_asm",
    out = "mem.a",
    srcs = [
        "src/mem.asm"
    ],
    cmd = "nasm -f elf64 -o $OUT.o $SRCS && ar cr $OUT $OUT.o",
    visibility = [ "//sources/supervisor/..." ]
)
