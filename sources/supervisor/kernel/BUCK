cxx_library(
    name = "kernel",
    srcs = glob(['src/**/*.cc']),
    header_namespace = "",
    exported_headers = subdir_glob([('inc', "**/*.hh"), ('inc', "**/*.h")], prefix = "conurbation/"),
    soname = "kmodule:io.github.twrl.conurbation.kernel.core",
    deps = [
        ":start_asm",
        ":mem_asm"
    ],
    compiler_flags = [
        #"-fPIC",
        "-nostdinc++",
        "-nobuiltininc",
        "-fno-exceptions",
        "-fno-rtti",
        "-ffreestanding"
    ],
    link_style = "shared",
    preferred_linkage = "shared",
    linker_flags = [
        "-nostdlib",
        #"-Wl,-pie",
        "-Wl,--enable-new-dtags",
        "-Wl,--export-dynamic",
#        "-Wl,--discard-all",
        "-Wl,--build-id",
        "-Wl,-m,elf_x86_64",
        "-Wl,--whole-archive",
        "-Wl,-z,nodefaultlib",
        "-Wl,-z,combreloc",
        "-Wl,--hash-style,sysv",
        "-Wl,--soname,kmodule:io.github.twrl.conurbation.kernel.core",
        "-Wl,--dynamic-linker,kmodule:io.github.twrl.conurbation.kernel.core",
        #"$(location //sources/supervisor/kcore:start_asm)",
        "$(location :mem_asm)"
        ],
    visibility = [ "//sources/supervisor/..."]
)

# genrule(
#     name = "kernel_sys",
#     out = "kernel.sys",
#     #deps = [ ":kernel#default,shared" ],
#     srcs = [ "$(location :kernel#default,shared) "],
#     cmd = "cp $SRCS $OUT && elfedit --output-type exec --output-osabi none $OUT",
#     visibility = [ "//sources/supervisor/..." ]
# )

genrule(
    name = "start_asm",
    out = "start.a",
    srcs = [
        "src/start.asm"
    ],
    cmd = "nasm -f elf64 -o $OUT.o $SRCS && ar cr $OUT $OUT.o",
    visibility = [ "//sources/supervisor/..." ]
)

genrule(
    name = "mem_asm",
    out = "mem.a",
    srcs = [
        "src/mem.asm"
    ],
    cmd = "nasm -f elf64 -o $OUT.o $SRCS && ar cr $OUT $OUT.o",
    visibility = [ "//sources/supervisor/..." ]
)
